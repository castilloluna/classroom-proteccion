name: ProtecciÃ³n de la rama main
on:
  workflow_dispatch:
#  schedule:
    #- cron: '0 0 * * *'  # Diario a medianoche UTC

jobs:
  protect-branches:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
    steps:
      - name: Obtiene y protege repositorios
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.ORGANIZATION_ACCESS_TOKEN }}
          script: |

            const ORG_NAME = 'iescastillodeluna';
            const CLASSROOM_BOT = '66690702+github-classroom[bot]@users.noreply.github.com';
            //const CLASSROOM_BOT = 'github-classroom%5Bbot%5D';
            const repos = await github.paginate(
              github.rest.repos.listForOrg, {
                org: ORG_NAME,
                type: 'all',
                per_page: 100,
              }
            );

            //console.log(`DEBUG: Empieza el script: ${repos.length}`);
            //console.log('Lista de repos: ', repos.map(r => r.name).join(', '));

            for (const repo of repos) {
              try {
                // Obtener el primer commit del repositorio
                const { data: commits } = await github.rest.repos.listCommits({
                  owner: ORG_NAME,
                  repo: repo.name,
                  per_page: 1,
                  author: CLASSROOM_BOT,
                  page: 1,
                });

                console.log(`DEBUG: Empieza el script: ${repo.name}:${repo.visibility}`);
                if (commits.length === 0) continue;

                const firstCommitAuthor = commits[0].author.login;
                console.log(`Analizamos ${repo.name}:${repo.visibility} -- ${firstCommitAuthor}`);
                if (firstCommitAuthor === 'github-classroom[bot]') {
                  await github.rest.repos.updateBranchProtection({
                    owner: ORG_NAME,
                    repo: repo.name,
                    branch: 'main',
                    required_status_checks: null,
                    enforce_admins: true,
                    required_pull_request_reviews: {
                      required_approving_review_count: 1,
                    },
                    restrictions: null,
                  });
                  console.log(`Protegido: ${repo.name}`);
                }
              } catch (error) {
                console.error(`Error en ${repo.name}: ${error.message}`);
              }
            }
